name: HMSSQL Build & Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: Ubuntu
            compiler: clang-12
          - os: windows-latest
            name: Windows
            compiler: clang
          - os: fedora-latest
            name: Fedora
            compiler: clang
          - os: archlinux:latest
            name: Arch Linux
            compiler: clang

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          clang-14 \
          clang-format-14 \
          clang-tidy-14 \
          cmake \
          doxygen \
          git \
          pkg-config \
          zlib1g-dev \
          libelf-dev \
          libdwarf-dev \
          g++ \
          libspdlog-dev

    - name: Install Dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install -y cmake doxygen.install git visualstudio2019buildtools mingw
        choco install -y mingw-w64 --version=8.1.0
        refreshenv

    - name: Install Dependencies (Fedora)
      if: matrix.os == 'fedora-latest'
      run: |
        sudo dnf -y update
        sudo dnf -y install \
          @development-tools \
          clang \
          clang-tools-extra \
          cmake \
          doxygen \
          git \
          pkgconf-pkg-config \
          zlib-devel \
          elfutils-libelf-devel \
          libdwarf \
          gcc-c++ \
          spdlog-devel

    - name: Install Dependencies (Arch)
      if: matrix.os == 'archlinux:latest'
      run: |
        sudo pacman -Syu --noconfirm
        sudo pacman -S --noconfirm \
          base-devel \
          clang \
          clang-tools-extra \
          cmake \
          doxygen \
          git \
          pkgconf \
          zlib \
          elfutils \
          libdwarf \
          gcc \
          spdlog

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_C_COMPILER=${{ matrix.compiler }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}++ \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_CXX_STANDARD=17 \
          -DCMAKE_CXX_STANDARD_REQUIRED=ON \
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
          -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror" \
          -DCMAKE_CXX_FLAGS_DEBUG="-O0 -ggdb -fsanitize=address -fno-omit-frame-pointer -fno-optimize-sibling-calls" \
          -DCMAKE_POSITION_INDEPENDENT_CODE=ON

    - name: Build
      run: cmake --build build --config Debug

    - name: Test
      working-directory: build
      env:
        ASAN_OPTIONS: detect_leaks=1
      run: ctest --build-config Debug --output-on-failure

    - name: Generate Coverage Report
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y lcov
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info '/usr/*' '/third_party/*' --output-file coverage.info
        lcov --list coverage.info

    - name: Upload Coverage Report
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.info
        name: ubuntu-coverage